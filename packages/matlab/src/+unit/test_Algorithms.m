classdef test_Algorithms < mlunit.test_case

  properties 
    testObj = [];
    baseObj = [];
  end
  
  methods

    function test_obj = test_Algorithms(varargin)
      test_obj = test_obj@mlunit.test_case(varargin{:});
    end
    
    function self = set_up( self )
      self.testObj = cws.Algorithms();
      self.testObj.addAlgorithmDef( 'short_id' , 'TEST1' ,...
        'type' , 'LPCF' , ...
        'n_h' , 1020 , ...
        'tau_out' , 1.24 , ...
        'use_bed' , true , ...
        'library' , [ ] , ...
        'n_bed' , 23 , ...
        'p_out' , 0.5 , ...
        'tau_evt' , 0.89 , ...
        'n_eto' , 13 , ...
        'algs_in' , {} , ...
        'javaClass' , '' );
      self.testObj.addAlgorithmDef( 'short_id' , 'TEST2' ,...
        'type' , 'MVNN' , ...
        'mfile', 'MVNN' , ...
        'n_h' , 944 , ...
        'tau_out' , 1.23 , ...
        'use_bed' , true , ...
        'library' , [ ] , ...
        'n_bed' , 22 , ...
        'p_out' , 0.5 , ...
        'tau_evt' , 0.9 , ...
        'n_eto' , 12 , ...
        'algs_in' , {} , ...
        'javaClass' , '' );
    end
    
    function self = tear_down( self )
      % Do nothing
    end
    
    % Public Unit Tests
    function self = test_01_constructor( self )
      mlunit.assert(isa(self.testObj,'cws.Algorithms'));
    end
    
    function self = test_02_add_algorithm( self )
      self.testObj.addAlgorithmDef( 'short_id' , 'TEST3' ,...
        'type' , 'LPCF' , ...
        'n_h' , 1020 , ...
        'tau_out' , 1.24 , ...
        'use_bed' , true , ...
        'library' , [ ] , ...
        'n_bed' , 23 , ...
        'p_out' , 0.5 , ...
        'tau_evt' , 0.89 , ...
        'n_eto' , 13 , ...
        'algs_in' , {} , ...
        'javaClass' , '' );
      mlunit.assert_equals( 'TEST3' , self.testObj.short_id{3} );
      mlunit.assert_equals( 'LPCF' ,  self.testObj.type{3} );
      mlunit.assert_equals( ''     ,  self.testObj.mfile{3} );
      mlunit.assert_equals( 1020 ,    self.testObj.n_h(3) );
      mlunit.assert_equals( 1.24 ,    self.testObj.tau_out{3}(1) );
      mlunit.assert_equals( 1 ,       self.testObj.use_bed(3) );
      mlunit.assert_equals( 0 ,       self.testObj.use_cluster(3) );
      mlunit.assert_equals( 23 ,      self.testObj.n_bed(3) );
      mlunit.assert_equals( 0.5 ,     self.testObj.p_out(3) );
      mlunit.assert_equals( 0.89 ,    self.testObj.tau_evt(3) );
      mlunit.assert_equals( 13 ,      self.testObj.n_eto(3) );
      mlunit.assert_equals( '' ,      self.testObj.library{3} );
      mlunit.assert_equals( '' ,      self.testObj.javaClass{3} );
    end
    
    
    function self = test_04_mod_algorithm( self )
      self.testObj.ModAlgorithmDef( 'TEST2' ,...
        'n_h' , 924 , ...
        'tau_out' , 0.99 , ...
        'use_bed' , false );
      mlunit.assert_equals( 'TEST2' , self.testObj.short_id{2} );
      mlunit.assert_equals( 'MVNN' ,  self.testObj.type{2} );
      mlunit.assert_equals( 'MVNN' ,  self.testObj.mfile{2} );
      mlunit.assert_equals( 924  ,    self.testObj.n_h(2) );
      mlunit.assert_equals( 0.99 ,    self.testObj.tau_out{2}(1) );
      mlunit.assert_equals( 0 ,       self.testObj.use_bed(2) );
      mlunit.assert_equals( 0 ,       self.testObj.use_cluster(2) );
      mlunit.assert_equals( 22 ,      self.testObj.n_bed(2) );
      mlunit.assert_equals( 0.5 ,     self.testObj.p_out(2) );
      mlunit.assert_equals( 0.9  ,    self.testObj.tau_evt(2) );
      mlunit.assert_equals( 12 ,      self.testObj.n_eto(2) );
      mlunit.assert_equals( '' ,      self.testObj.library{2} );
      mlunit.assert_equals( '' ,      self.testObj.javaClass{2} );
    end

    function self = test_05_add_algorithm_exists( self )
      ERR = [];
      try
        self.testObj.addAlgorithmDef( 'short_id' , 'TEST1' ,...
          'type' , 'LPCF' , ...
          'n_h' , 1220 , ...
          'tau_out' , 1.24 , ...
          'use_bed' , true , ...
          'library' , [ ] , ...
          'n_bed' , 23 , ...
          'p_out' , 0.5 , ...
          'tau_evt' , 0.29 , ...
          'n_eto' , 13 , ...
          'algs_in' , {} , ...
          'javaClass' , '' );
      catch ERR,
      end
      mlunit.assert(~isempty(ERR));
      mlunit.assert_equals('CANARY:algorithmalreadydefined',ERR.identifier);
      mlunit.assert_equals( 1020 ,    self.testObj.n_h(1) );
      mlunit.assert_equals( 0.89 ,    self.testObj.tau_evt(1) );
    end
    
    function self = test_03_is_algorithm( self )
      mlunit.assert_equals( 1 , self.testObj.IsAlgorithm( 'TEST2' ) );
      mlunit.assert_equals( 0 , self.testObj.IsAlgorithm( 'TEST4' ) );
    end
    
    function self = test_06_get_algorithm( self )
      disp('TODO: This test ( test_Algorithms #6 ) is incomplete');
    end

  end
  
end
